
trigger: none

stages:
- stage: Build
  variables:
    solution: '**/*.sln'
    buildPlatform: 'Any CPU'
    buildConfiguration: 'Release'
  displayName: Build1 stage
  jobs: 
  - job: Build
    displayName: CI job
    steps:
    - task: DotNetCoreCLI@2
      displayName: Restore
      inputs:
        command: restore
        projects: '**/*.csproj'

    - task: DotNetCoreCLI@2
      displayName: Build
      inputs:
        projects: '**/*.csproj'
        arguments: '--configuration $(buildConfiguration)'

    - task: DotNetCoreCLI@2
      displayName: Test
      inputs:
        command: test
        projects: '**/*Tests/*.csproj'
        arguments: '--configuration $(buildConfiguration)'


    - task: DotNetCoreCLI@2
      displayName: Publish
      inputs:
        command: publish
        publishWebProjects: True
        arguments: '--configuration $(buildConfiguration) --output "$(build.artifactstagingdirectory)"'
        zipAfterPublish: True


    - task: CopyFiles@2
      displayName: 'Copy ARM templates'
      inputs:
        SourceFolder: ArmTemplates
        TargetFolder: '$(build.artifactstagingdirectory)'

    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact'
      inputs:
        PathtoPublish: '$(build.artifactstagingdirectory)'

- stage: Deploy
  displayName: Deploy stage
  dependsOn: Build
  jobs:  
  - deployment: VMDeploy
    displayName: web
    environment:
      name: Niadak-VM-Env
      resourceType: VirtualMachine
    strategy:
      rolling:
        maxParallel: 2
        preDeploy:
          steps:
            - download: build
              artifact: drop
            - script: echo Hello, world! This is pre-deploy
              displayName: 'Run a one-line script'
        deploy:
          steps:
          - task: IISWebAppManagementOnMachineGroup@0
            displayName: 'Create Website'
            inputs:
              WebsiteName: 'Default Web Site'
              AddBinding: True
              Bindings: '{"bindings":[{"protocol":"http","ipAddress":"All Unassigned","port":"80","hostname":"","sslThumbprint":"","sniFlag":false}]}'
              ParentWebsiteNameForVD: 'Default Web Site'
              ParentWebsiteNameForApplication: 'Default Web Site'
          - task: IISWebAppDeploymentOnMachineGroup@0
            displayName: 'Deploy application to Website'
            inputs:
              WebSiteName: 'Default Web Site'
              Package: '$(Pipeline.Workspace)/drop/**/*.zip'
              TakeAppOfflineFlag: true
              XmlVariableSubstitution: true

        routeTraffic:
          steps:
            - download: build
              artifact: drop
            - script: echo Hello, world! This is routeTraffic
              displayName: 'Run a one-line script'

        postRouteTraffic:
          steps:
            - download: none
            - script: echo Hello, world! This is postRouteTraffic
              displayName: 'Run a one-line script'

        on:
          failure:
            steps:
            - download: none
            - script: echo Hello, world! This is on failure
              displayName: 'Run a one-line script'

          success:
            steps:
            - download: none
            - script: echo Hello, world! This is on success
              displayName: 'Run a one-line script' 

